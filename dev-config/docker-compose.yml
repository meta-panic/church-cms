services:
  frontend:
    tty: true
    depends_on:
      cms:
        condition: service_healthy
      db:
        condition: service_healthy
    build:
      context: ../frontend
      args:
        - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
      dockerfile: ../dev-config/Dockerfile.frontend.prod
      tags:
        - b80ow4gcgs4k44g4ck4kgcow-cms:SHA_frontend_${SOURCE_COMMIT}
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      HOSTNAME: ${FRONTEND_HOSTNAME}
      NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL}
      NODE_ENV: ${NODE_ENV}
      PROD_FRONT_URL: ${PROD_FRONT_URL}
      PROD_STRAPI_URL: ${PROD_STRAPI_URL}
    networks:
      - strapi
  cms:
    tty: true
    depends_on:
      db:
        condition: service_healthy
    build:
      context: ../cms
      dockerfile: ../dev-config/Dockerfile.cms
      tags:
        - b80ow4gcgs4k44g4ck4kgcow-cms:SHA_cms_${SOURCE_COMMIT}
    ports:
      - "127.0.0.1:1337:1337"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:1337/_health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    environment:
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: db
      DATABASE_CLIENT: postgres
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_SSL: "false"
      NODE_ENV: ${NODE_ENV}
      PROD_FRONT_URL: ${PROD_FRONT_URL}
      PROD_STRAPI_URL: ${PROD_STRAPI_URL}
    volumes:
      - photos:/usr/app/public
    networks:
      - strapi
  db:
    image: postgres:14.1-alpine
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: always
    # ports:
    #   - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - strapi

networks:
  strapi:
volumes:
  db:
  photos:
