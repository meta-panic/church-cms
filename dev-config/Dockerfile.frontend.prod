FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps


WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json package-lock.json* .npmrc* ./
RUN npm ci --include=optional sharp

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
RUN apk add --no-cache bash # Install bash

COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Next.js collects completely anonymous telemetry data about general usage.
# Learn more here: https://nextjs.org/telemetry
# Uncomment the following line in case you want to disable telemetry during the build.
# ENV NEXT_TELEMETRY_DISABLED=1

RUN npm install --os=linux --libc=musl --cpu=x64 sharp

RUN npm run build

# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app
RUN apk add --no-cache bash curl
RUN npm install -g @usebruno/cli@1.38.1

# Uncomment the following line in case you want to disable telemetry during runtime.
# ENV NEXT_TELEMETRY_DISABLED=1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/public ./public

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

COPY tests ./tests
COPY run.sh ./
COPY run-tests.sh ./

RUN chmod +x ./run.sh
RUN chmod +x ./run-tests.sh

USER nextjs

RUN ls -la /app

CMD bash -c "./run-tests.sh docker & ./run.sh"